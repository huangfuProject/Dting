server.port=8081
##################################### 数据源配置 ###########################################
# 数据库url
spring.datasource.url=jdbc:mysql://10.0.103.252:3306/dting?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=UTC
# 数据库驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据库用户名
spring.datasource.username=root
# 数据库密码
spring.datasource.password=123456
################################### HikariCP连接池配置 ######################################
# 连接池名字
spring.datasource.hikari.pool-name=DtingDbPool_HikariCP
# 最小空闲连接数量
spring.datasource.hikari.minimum-idle=5
# 空闲连接存活最大时间，默认600000（10分钟）
spring.datasource.hikari.idle-timeout=180000
# 连接池最大连接数，默认是10
spring.datasource.hikari.maximum-pool-size=10
# 此属性控制从池返回的连接的默认自动提交行为,默认值：true
spring.datasource.hikari.auto-commit=true
# 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
spring.datasource.hikari.max-lifetime=1800000
# 数据库连接超时时间,默认30秒，即30000
spring.datasource.hikari.connection-timeout=30000
# 连接测试使用的sql
spring.datasource.hikari.connection-test-query=SELECT 1
################################### Mybatis-plus配置 ####################################
# xml文件所在路径
mybatis-plus.mapper-locations=classpath*:/mapper/**/*.xml
mybatis-plus.executorType=simple
# 驼峰
mybatis-plus.configuration.map-underscore-to-camel-case=true
# 关闭二级缓存
mybatis-plus.configuration.cacheEnabled=false
# 指定当结果集中值为 null 的时候是否调用映射对象的 Setter（Map 对象时为 put）方法，通常运用于有 Map.keySet() 依赖或 null 值初始化的情况。
mybatis-plus.configuration.callSettersOnNulls=true
# 不打印 logo
mybatis-plus.GlobalConfig.banner=false

################################### redis的配置 ####################################
spring.redis.host=10.0.103.252
spring.redis.port=6379
spring.redis.database=0
spring.redis.jedis.pool.enabled=true
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.min-idle=5
spring.redis.jedis.pool.max-wait=-1


################################### 监控服务配置 #########################################
# 端口
dting.message.server.port=8888
# websocket端口
ws.port=8787